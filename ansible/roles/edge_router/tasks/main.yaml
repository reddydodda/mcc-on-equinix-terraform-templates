---
- import_tasks: ../common/tasks/main.yaml

- name: Configuring Vlan Interfaces
  ansible.builtin.template:
    src: "{{ config_vlan_interfaces_template }}"
    dest: "{{ config_vlan_interfaces }}"
    owner: root
    group: root
    mode: 0644
  become: true

- name: Configuring VxLAN Interfaces
  ansible.builtin.template:
    src: "{{ config_vxlan_interfaces_template }}"
    dest: "{{ config_vxlan_interfaces }}"
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - Restart networking

- name: Configuring VxLAN Bridge
  ansible.builtin.template:
    src: "{{ config_vxlan_bridge_template }}"
    dest: "{{ config_vxlan_bridge }}"
    owner: root
    group: root
    mode: 0644
  become: true
  notify:
    - Restart networking

- name: Configure VxLAN routing
  ansible.builtin.template:
    src: "{{ config_vxlan_routing_template }}"
    dest: "{{ config_vxlan_routing }}"
    owner: root
    group: root
    mode: 0744
  become: true
  notify:
    - Restart networking

- name: Make sure that networking was restarted after initial bridge config setup
  ansible.builtin.meta: flush_handlers

- name: Configuring port forwarding for VxLAN Bridge
  sysctl:
    name: "net/ipv4/conf/{{ br_vxlan }}/forwarding"
    value: 1
    state: present
    sysctl_file: /etc/sysctl.conf
    reload: true

- name: Configuring port forwarding per VLAN
  sysctl:
    name: "net/ipv4/conf/{{ initial_bond_name }}.{{ item.vlan_id }}/forwarding"
    value: 1
    state: present
    sysctl_file: /etc/sysctl.conf
    reload: true
  loop: "{{ network_configuration.routers.value[inventory_hostname].vlans }}"

- name: Configuring IP forwarding for Bridge
  sysctl:
    name: "net.ipv4.ip_forward"
    value: 1
    state: present
    sysctl_file: /etc/sysctl.conf
    reload: yes

- name: NAT traffic
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    out_interface: "{{ initial_bond_name }}"
    source: 192.168.0.0/16
    jump: MASQUERADE
  become: yes

- name: Create ubuntu user
  ansible.builtin.user:
    name: "{{ seed_username }}"
    state: present
    shell: /bin/bash
    groups: sudo
    append: yes

- name: Deploy SSH Public Key
  ansible.posix.authorized_key:
    user: "{{ seed_username }}"
    state: present
    key: "{{ lookup('file', '{{ ansible_ssh_public_key_file }}') }}"

- name: Passwordless sudo
  lineinfile:
    path: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'
